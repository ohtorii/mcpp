/*	C/C++のプリプロセスを行う秀丸マクロ。

プリプロセスの結果は「アウトプット枠」へ書き出します。

【対象者】
	プログラマー

【動作環境】
	秀丸エディタ ver8.20 b14 で動作を確認。
	秀丸エディタ ver8 以降なら動くはず。

【動作】
	＊ファイル全体を対象とします、選択の有無は無視されます。
	＊利便性のため編集のファイルをセーブしなくてもプリプロセス出来るようにしています。
	  そのため「ファイルへ保存した・していない」「更新あり・なし」でinclude動作が多少異なります。
	  詳細は後述で。

【includeの動作】
	＊ファイルへ保存されている
		・更新マークが付いていない		（※１）
		・更新マークが付いている		（※２）
	＊ファイルへ保存されていない		（※２）

	（※１）
	#includeは正しく動作する。

	（※２）
	編集中のファイルをテンポラリファイルへ保存したのちにプリプロセスを行います。
	そのため#includeが正しく動作しない可能性があります。
	正しく動作するように手は打ったつもりですが・・・保証はできません。
	（何をやっているのかは $_g_opt_inc_ex変数 を参照。）
*/



//////////////////////////////////////////////////////////////////////////////
//			ユーザーカスタマイズ
//////////////////////////////////////////////////////////////////////////////

//mcpp.exe へのパス
$_g_exe	= "\"" + hidemarudir + "/mcpp/bin/mcpp.exe" + "\"";

//文字コード、事前定義のdefine、警告レベルなど
$_g_opt_base	= "-DWIN32 -P -W 0 ";

//通常の include ディレクトリ
$_g_opt_inc 	= "-I../include -I../inc ";

//その他、追加オプション
$_g_opt_ex		= "";




//////////////////////////////////////////////////////////////////////////////
//			内部処理
//////////////////////////////////////////////////////////////////////////////

//文字コード
$_g_encoding  	= "";

//プリプロセス対象のファイルをテンポラリへ作る都合上、カレントディレクトリにパスを通しておく。
$_g_opt_inc_ex	= "-I\"" + directory + "\" ";

//テンポラリディレクトリ名
$g_tmpdir_base_name = "hidemaru_mcpp_tmp_dir";

//テンポラリファイル名
//環境変数TMPのディレクトリに生成する。
$g_tmpfile_base_name = "hidemaru_mcpp_tmp";




call PreMain;
endmacro;

PreMain:
	disablehistory 0xff;
	$_g_old_searchbuffer = searchbuffer;
	#_g_searchoption 	 = searchoption;
	setcompatiblemode 0x0003|0x000c|0x0200|0x2000;
	call Main;
	setsearch $_g_old_searchbuffer, #_g_searchoption;
	return ;
	
Main:
	##old_x=x;
	##old_y=y;
	menu "プリプロセス", "依存関係を出力";
	if(0==result){
		return;
	}else if(1==result){
		//pass
	}else if(2==result){
		$_g_opt_ex = $_g_opt_ex + "-M ";
	}
	disabledraw;
	disableinvert;
	call Start;
	moveto ##old_x,##oldy;
	return ##return ;


Start:
	call MakeEncodingOpt;

	$$opt				= $_g_opt_base + $_g_opt_ex + $_g_encoding;
	$$tmp_in_filename	= "";
	##use_tmp_file		= true;
	$$current_dir		= "";

	if((0 == strlen(filename) || updated)){
		//ファイル名が付けられていない or 更新あり
		call GetTempFile;
		if(0==strlen($$return)){
			return false;
		}
		$$tmp_in_filename	= $$return;
		##use_tmp_file		= true;
		$$current_dir		= directory;
		$$opt = $$opt + $_g_opt_inc_ex;
	}else{
		$$tmp_in_filename	= filename;
		##use_tmp_file		= false;
		$$current_dir		= directory;

		$$opt = $$opt + $_g_opt_inc + $_g_opt_cur_inc;
	}


	if(##use_tmp_file){
		call MakeFile  $$tmp_in_filename;
		if(! ##return){
			return false;
		}
	}

	$$cmd = $_g_exe + " "
			+ $$opt + " "
			+ "\"" + $$tmp_in_filename + "\"";

	call SpawnExe $$cmd, $$current_dir;
	if(false == ##return){
		return false;
	}

	if(##use_tmp_file){
		deletefile $$tmp_in_filename;
	}
	return true;


MakeFile:
	$$tmp_filename = $$1;

	selectall;
	$$text=gettext(seltopx,seltopy,selendx,selendy);

	##prev_hidemaru = hidemaruhandle(0);

	openfile "/h " + $$tmp_filename;
	if(! result){
		message("テンポラリファイルのオープンに失敗。\n" + $$tmp_filename);
		return false;
	}
	##new_hidemaru = hidemaruhandle(0);
	insert $$text;
	save;
	setactivehidemaru	##prev_hidemaru;
	closehidemaruforced ##new_hidemaru;
	return true;


SpawnExe:
	$$cmd 				= $$1;
	$$current_dir		= $$2;

	runex $$cmd
			, 1 			//sync	  0:async 1:sync
			, 0, "" 		//stdin   0:none 1:auto 2:file 3:(reserve) 4:all 5:select
			, 7, "" 		//stdout  0:none 1:auto 2:file 3:add file  4:new 5:insert 6:replace
			, 1, "" 		//stderr  0:none 1:=out 2:file 3:add file  4:new 5:insert 6:replace
			, 2, $$current_dir //folder  0:none 1:current 2:specify 3:(reserve) 4:exe's folder
			, 2 			//show	  0:auto 1:show 2:hide
			, 1 			//nodraw  0:draw 1:no draw
			, 0 			//unicode 0:ansi 2:unicode
			;
	if(! result){
		message("runex で失敗。!result");
		return false;
	}
	return true;


//文字コードの判別
MakeEncodingOpt:
	##c = charset&0x3f;
	$$e = "";
	if(1==##c){
		$$e="shift-JIS";
	}else if(3==##c){
		$$e="EUC-JP";
	}else if(4==##c){
		$$e="shift-JIS";
	}else if(6==##c){
		$$e="UTF-8";
	}else if(9==##c){
		$$e="GB-2312";
	}else if(10==##c){
		$$e="Big-Five";
	}else if(11==##c){
		$$e="KSC-5601";	//違うかも?
	}else if(12==##c){
		$$e="KSC-5601";	//違うかも?
	}else{
		//mcpp非対応の文字コード。
		//とりあえずダメ元でプリプロセスさせてみる。
		$$e="";
	}
	if(0==strlen($$e)){
		$_g_encoding="";
	}else{
		$_g_encoding="-e"+$$e+" ";
	}
	return ;


//ディレクトリ作成
CreateDir:
	$$abs_dirname = $$1;
	##obj = createobject("Scripting.FileSystemObject");
	callmethod ##obj,"CreateFolder",$$abs_dirname;
	##ret=callmethod_returnnum(##obj,"FolderExists",$$abs_dirname);
	if(! ##ret){
		message("テンポラリディレクトリの作成に失敗しました。\n" + $$abs_dirname);
	}
	releaseobject ##obj;
	return ##ret;


GetTempFile:
	$$tempdir = getenv("tmp");
	if(0==strlen($$tempdir)){
		message("環境変数 tmp が設定されていません、設定して下さい。");
		return  false;
	}

	/*if( rightstr( $$tempdir, 1 ) != "\\" ) {
		$$tempdir = $$tempdir + "\\";
	}*/
	$$tempdir = $$tempdir + "\\" + $g_tmpdir_base_name;
	call CreateDir $$tempdir;
	if(! ##return){
		return "";
	}
	$$tempdir = $$tempdir + "\\";

	##n=0;
	while(##n<1000){
		$$tempfile = $$tempdir + $g_tmpfile_base_name + str(##n);
		if( !existfile( $$tempfile ) ) {
			return $$tempfile;
		}
		##n = ##n + 1;
	}

	message "テンポラリファイルが作成できません\n" +
			$$tempfile + "\n\n" +
			"下記テンポラリディレクトリ内のファイルを全て削除してみて下さい。\n" +
			$$tempdir;

	return "";


